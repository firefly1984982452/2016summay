	*#*#4636#*#* 手机隐藏查看更多

	JAVA复习

		成员变量：	类		堆
		局部变量：	方法	栈

		重载：方法名一样，参数不同

		this:自己
		static:静态成员、变量
		super:父类

		静态语句块：{}	只调用一次
		初始化语句块：{}	调用一次执行一次

		char 和 int 的关系：ASCII码值
		JAVA默认码表：Unicode

		&&：短路与：A不满足，不执行B
		&：与：A不满足，执行B
		|：
		||：
		&和|都能作位运算（二进制）

		基本类型：
		整型：byte short int long
		布尔型：boolean
		字符型：char 
		浮点型：float double


做题知识点：

	静态块：用static申明，JVM加载类时执行，仅执行一次
	构造块：类中直接用{}定义，每一次创建对象时执行
	执行顺序优先级：静态块>main()>构造块>构造方法


	sleep和wait的区别有：
	  1，这两个方法来自不同的类分别是Thread和Object
	  2，最主要是sleep方法没有释放锁，而wait方法释放了锁，使得敏感词线程可以使用同步控制块或者方法。
	  3，wait，notify和notifyAll只能在同步控制方法或者同步控制块里面使用，而sleep可以在任何地方使用
		   synchronized(x){
		      x.notify()
		     //或者wait()
		   }
	   4,sleep必须捕获异常，而wait，notify和notifyAll不需要捕获异常


	1.finally{}代码块比return先执行。
	2.多个return是按顺序执行的的，多个return执行了一个后，后面的return就不会执行了。
	3. 记住一点，不管有不有异常抛出， finally都会在return返回前执行。



	数据类型的转换，分为自动转换和强制转换。

		自动转换是程序在执行过程中 “ 悄然 ” 进行的转换，不需要用户提前声明，一般是从位数低的类型向位数高的类型转换；强制类型转换则必须在代码中声明，转换顺序不受限制。

		自动数据类型转换
			自动转换按从低到高的顺序转换。不同类型数据间的优先关系如下： 
			    低 ---------------------------------------------> 高 
			    byte,short,char-> int -> long -> float -> double

		强制数据类型转换
		强制转换的格式是在需要转型的数据前加上 “( )” ，然后在括号内加入需要转化的数据类型。有的数据经过转型运算后，精度会丢失，而有的会更加精确



	HashMap可以插入null的key或value，插入的时候，检查是否已经存在相同的key，如果不存在，则直接插入，如果存在，则用新的value替换旧的value，


	用new创建的对象在堆区
	函数中的临时变量在栈去
	java中的字符串在字符串常量区

	equal:是用来比较两个对象内部的内容是否相等的。
	==：是用来判断两个对象的地址是否相同，即是否是指相同一个对象。


