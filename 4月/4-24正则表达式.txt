内存：
	栈、堆、静态区

Collections ：集合的工具类


名词：
成员变量，局部变量

当要把对象实例化到硬盘时，用Serializable
xxvks dhb gc Dtel ppod

怎样写进去的，怎样读出来

List:有序，可重复
Set :反之

&：两者比较，会比较两个的二进制码
&& ：两者比较，第一个错了就不比较 了


ArrayList查询快，插入麻烦
LinkedList:反之
Vector:用于线程的安全 效率低 比如说同时下载多个文件


截取：split()


正则表达式
java.util.regex
pattern表达式的基础

String s = "[0-9]{10}";
boolean b = "023957023".matches(s)


trim()去两边的空格
replace(" ","");//去掉所有空格
replaceAll("[0-9]","*");把0-9替换成*


^[^\u4e00-\u9fa5]{0,}$===不能出现中文
^[\u4e00-\u9fa5]{0,}$===只能出现中文


//代替对应的字母、数字、下划线.
//任意字符：.
//数字:[0-9] 或者 \d
//非数字：[^0-9] 或者 \D 
//字母：[a-zA-Z] 
//字母数字下划线：[a-zA-Z_0-9]  或者 \w
//中文字符：[^\u4e00-\u9fa5]


//===========================================================
//代替出现的次数
//{1,2} {2,}  
//?  0或者1次
//+  1或者多次
//*  0或者多次

//===========================================================
//边界符
//用数字开头： ^[a-zA-Z]
//用数字结尾： \d$

邮编：^[1-9]\d{5}$
电话号码：^((\(\d{2,3}\))|(\d{3}\-))?(\(0\d{2,3}\)|0\d{2,3}-)?[1-9]\d{6,7}(\-\d{1,4})?$

邮件：\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*
IP地址：/(\d+)\.(\d+)\.(\d+)\.(\d+)/g //
用户名(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$
网址：http://(/[\w-]+\.)+[\w-]+(/[\w- ./?%&=]*)?

